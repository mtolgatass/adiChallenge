//
//  ProductDetailInteractor.swift
//  AdiChallenge
//
//  Created by Tolga Ta≈ü on 25.03.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductDetailBusinessLogic {
    func fetchProductDetail(productId: String)
    func submitReview(productId: String, rating: Int, review: String)
}

class ProductDetailInteractor: ProductDetailBusinessLogic {
    var presenter: ProductDetailPresentationLogic?
    var worker: ProductDetailWorker = ProductDetailWorker()
  
    // MARK: - Fetch Product Detail
  
    func fetchProductDetail(productId: String) {
        worker.productDetailService(productId: productId, completion: { (model, error) in
            let response = ProductDetail.ProductDetail.Response(productDetailModel: model, error: error)
            self.presenter?.presentFetchedProductDetail(response: response)
        })
    }
    
    func submitReview(productId: String, rating: Int, review: String) {
        worker.submitReview(productId: productId, rating: rating, review: review, completion: { (result, error) in
            let response = ProductDetail.SubmitReview.Response(result: result, error: error)
            self.presenter?.handleSubmitReviewResult(response: response)
        })
    }
}
